/**
 * ################################################
 * # Importing Required Libraries and Modules #
 * ################################################
 */

// Importing Prisma Client and User model from Prisma Client library
import { PrismaClient, User } from '@prisma/client'

/**
 * ######################################
 * # Initializing Prisma Client #
 * ######################################
 *
 * Here, a new instance of PrismaClient is created. PrismaClient is a database client
 * generated by Prisma, which can be used to send queries to a database.
 */

const prisma = new PrismaClient()

/**
 * ################################################
 * # API Route Handler #
 * ################################################
 *
 * This is a Next.js API route handler that fetches all the users from the database using Prisma Client.
 *
 * The handler is an async function that fetches the users and then returns them in the HTTP response
 * with a 200 (OK) status code.
 */

export default async function handler(
	req: any, // The incoming request object
	res: {
		// The outgoing response object
		status: (arg0: number) => {
			(): any
			new (): any
			json: { (arg0: User[]): void; new (): any }
		}
	},
) {
	// Fetch all the users from the database
	const users = await prisma.user.findMany()

	// Log the users to the console (for debugging purposes)
	console.log(users)

	// Send the users in the HTTP response with a 200 (OK) status code
	res.status(200).json(users)
}

/**
 * ################################################
 * # Database Connection Function #
 * ################################################
 *
 * This is an async function that tries to connect to the database using Prisma Client.
 *
 * If the connection is successful, it logs a success message to the console. If the connection fails,
 * it logs an error message to the console.
 */

async function connectToDatabase() {
	try {
		// Try to connect to the database
		await prisma.$connect()

		// Log a success message to the console
		console.log('Połączono z bazą danych!')
	} catch (e) {
		// If the connection fails, log an error message to the console
		console.error('Błąd połączenia z bazą danych:', e)
	}
}

// Call the connectToDatabase function to establish a connection to the database
connectToDatabase()
